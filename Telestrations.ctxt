#BlueJ class context
comment0.params=
comment0.target=Telestrations()
comment0.text=\r\n\ The\ default\ and\ only\ constructor.\ \ This\ creates\ the\ basis\ for\ the\ entire\ game\ (basically,\ everything\ metioned\ above).\r\n
comment1.params=evt
comment1.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment10.params=
comment10.target=void\ manageRound()
comment10.text=\r\n\ This\ method\ manages\ timers\ and\ determines\ if\ the\ round\ is\ over\ or\ if\ the\ game\ is\ over,\ and\ calls\ the\ necessary\ methods\ to\ prepare\ the\ screen.\r\n
comment11.params=
comment11.target=void\ switchScreens()
comment11.text=\r\n\ This\ method\ calls\ the\ necessary\ methods\ to\ prepare\ the\ screen\ for\ each\ round.\r\n
comment12.params=
comment12.target=java.util.ArrayList\ getWords()
comment12.text=\r\n\ This\ method\ gets\ an\ ArrayList\ of\ words\ to\ be\ used\ by\ the\ players.\ \ The\ words\ come\ from\ the\ file\ "words.txt."\ This\ file\ can\ be\ edited.\ To\ add\ or\ remove\ words,\ simply\ type\ them\ on\ a\ new\ line\ \r\n\ (or\ remove\ the\ line\ they\ are\ on\ entirely)\ and\ update\ the\ number\ on\ the\ first\ line\ (which\ represents\ the\ number\ of\ words\ in\ the\ file).\ \ The\ list\ does\ NOT\ have\ to\ be\ in\ alphabetical\ order,\ that's\ \r\n\ just\ the\ way\ the\ words\ came.\r\n\ @return\ An\ ArrayList\ of\ Strings\ that\ contains\ the\ words.\r\n
comment13.params=curPlayer
comment13.target=int\ playerOffset(int)
comment13.text=\r\n\ This\ method\ calculates\ the\ playerOffset\ (as\ defined\ at\ the\ beginning\ of\ this\ document).\r\n\ @param\ curPlayer\ The\ current\ player.\r\n\ @return\ an\ int\ value\ representing\ the\ playerOffset.\r\n
comment14.params=
comment14.target=int\ reverseOffset()
comment14.text=\r\n\ This\ calculates\ the\ reverse\ of\ the\ playerOffset\ (instead\ of\ x\ forward,\ it's\ x\ back).\r\n\ @return\ The\ reverseOffset.\r\n
comment15.params=
comment15.target=java.awt.Dimension\ getPreferredSize()
comment15.text=\r\n\ Sets\ the\ prefered\ size\ of\ the\ frame\ and\ its\ components.\r\n
comment2.params=evt
comment2.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment3.params=image
comment3.target=void\ addImage(MyLinkedList)
comment3.text=\r\n\ Adds\ an\ image\ to\ the\ player\ data\ based\ on\ the\ current\ player,\ last\ player,\ playerOffset,\ and\ round.\r\n
comment4.params=guess
comment4.target=void\ addGuess(java.lang.String)
comment4.text=\r\n\ Sets\ the\ guess\ of\ the\ corresponding\ DataObject\ and\ sets\ the\ word\ of\ the\ next.\r\n\ @param\ guess\ A\ String\ of\ the\ guess.\r\n
comment5.params=
comment5.target=MyLinkedList\ getLastImage()
comment5.text=\r\n\ Gets\ the\ last\ image\ drawn\ by\ the\ player\ before\ the\ current\ player.\r\n\ @return\ A\ MyLinkedList\ of\ the\ image.\r\n
comment6.params=
comment6.target=void\ isDrawing()
comment6.text=\r\n\ This\ method\ rebuilds\ the\ screen\ to\ prepare\ it\ for\ a\ drawing\ round.\r\n
comment7.params=
comment7.target=void\ isTyping()
comment7.text=\r\n\ This\ method\ rebuilds\ the\ screen\ to\ prepare\ it\ for\ a\ guessing\ round\ (during\ which\ the\ user\ will\ be\ typing.\ Hence\:\ isTyping()).\r\n
comment8.params=
comment8.target=void\ isDone()
comment8.text=\r\n\ This\ method\ rebuilds\ the\ screen\ to\ prepare\ it\ for\ the\ ViewingScreen.\ \ This\ screen\ is\ the\ last\ screen\ setup\ in\ the\ program\ (Hence\:\ isDone()).\r\n
comment9.params=e
comment9.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment9.text=\r\n\ This\ is\ the\ action\ listener\ for\ the\ game.\ It\ handles\ the\ menu\ bar\ and\ all\ buttons\ on\ the\ frame.\r\n\ @param\ e\ An\ ActionEvent.\r\n
numComments=16
